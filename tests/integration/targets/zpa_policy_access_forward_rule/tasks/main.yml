---
- block:
    - name: Ensure ZPA API Credential is Set
      ansible.builtin.fail:
        msg: client_id, client_secret and customer_id should be defined in tests/integration/integration_config.yml
      when:
        - client_id is not defined
        - client_secret is not defined
        - customer_id  is not defined
        - client_id | length == 0
        - client_secret | length == 0
        - customer_id | length == 0

    - name: Ensure Policy Access Forward is absent (leftover)
      willguibr.zpacloud.zpa_policy_forwarding_rule:
        state: absent
        client_id: "{{ client_id }}"
        client_secret: "{{ client_secret }}"
        customer_id: "{{ customer_id }}"
        name: "Test policy access forward rule"
        description: "Test policy access forward rule"
        action: "BYPASS"
        rule_order: 1
        operator: "AND"
      ignore_errors: true # In case one was left from previous run
      register: result

    - name: Ensure Policy Access Forward is absent
      willguibr.zpacloud.zpa_policy_forwarding_rule:
        state: absent
        client_id: "{{ client_id }}"
        client_secret: "{{ client_secret }}"
        customer_id: "{{ customer_id }}"
        name: "Test policy access forward rule"
        description: "Test policy access forward rule"
        action: "BYPASS"
        rule_order: 1
        operator: "AND"
      ignore_errors: true # In case one was left from previous run
      register: result

    - name: Verify Policy Access Forward is absent
      ansible.builtin.assert:
        that:
          - not result.changed

    # Create Policy Access Forward (Present)
    - name: Ensure Policy Access Forward is (Present)
      willguibr.zpacloud.zpa_policy_forwarding_rule:
        state: present
        client_id: "{{ client_id }}"
        client_secret: "{{ client_secret }}"
        customer_id: "{{ customer_id }}"
        name: "Test Policy Access Forward rule"
        description: "Test Policy Access Forward rule"
        action: "BYPASS"
        rule_order: 1
        operator: "AND"
      register: result
      
    - name: Verify Policy Access Forward is present
      ansible.builtin.assert:
        that:
          - result.data
          - result.data.name is defined
          - result.data.id is defined

    - name: Create the Policy Access Forward (again; idempotency check)
      willguibr.zpacloud.zpa_policy_forwarding_rule:
        state: present
        client_id: "{{ client_id }}"
        client_secret: "{{ client_secret }}"
        customer_id: "{{ customer_id }}"
        name: "Test Policy Access Forward rule"
        description: "Test Policy Access Forward rule"
        action: "BYPASS"
        rule_order: 1
        operator: "AND"
      register: result

    - name: Verify Policy Access Forward is absent (from absent)
      ansible.builtin.assert:
        that:
          - result.changed

    - name: Fetch all Policy Access Forward
      willguibr.zpacloud.zpa_policy_forwarding_rule_info:
        client_id: "{{ client_id }}"
        client_secret: "{{ client_secret }}"
        customer_id: "{{ customer_id }}"
      register: result
    - name: Ensure all Policy Access Forward found
      ansible.builtin.assert:
        that:
          - not result.changed
          - result.data[0] is defined

    - name: Give the ZPA Cloud a 5 seconds to settle
      ansible.builtin.pause:
        seconds: 5

    - name: Delete Policy Access Forward
      willguibr.zpacloud.zpa_policy_forwarding_rule:
        state: absent
        client_id: "{{ client_id }}"
        client_secret: "{{ client_secret }}"
        customer_id: "{{ customer_id }}"
        name: "Test Policy Access Forward"
        description: "Test Policy Access Forward"
        action: "BYPASS"
        rule_order: 1
        operator: "AND"
      register: result

    - name: Verify Policy Access Forward is absent
      ansible.builtin.assert:
        that:
          - result.changed

    - name: Delete Policy Access Forward (again; idempotency check)
      willguibr.zpacloud.zpa_policy_forwarding_rule:
        state: absent
        client_id: "{{ client_id }}"
        client_secret: "{{ client_secret }}"
        customer_id: "{{ customer_id }}"
        name: "Test Policy Access Forward"
        description: "Test Policy Access Forward"
        action: "BYPASS"
        rule_order: 1
        operator: "AND"
      register: result

    - name: Verify Policy Access is absent
      ansible.builtin.assert:
        that:
          - not result.changed
